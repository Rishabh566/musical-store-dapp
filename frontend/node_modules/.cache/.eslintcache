[{"C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\index.js":"1","C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\App.js":"2","C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\components\\Headphones.js":"4","C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\components\\About.js":"5","C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\components\\Speakers.js":"6","C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\components\\Earpods.js":"7","C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\components\\Header.js":"8","C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\components\\Banner.js":"9","C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\components\\Orders.js":"10","C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\components\\Landing.js":"11"},{"size":617,"mtime":1680820473216,"results":"12","hashOfConfig":"13"},{"size":2755,"mtime":1680820477435,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1680815133293,"results":"15","hashOfConfig":"13"},{"size":3059,"mtime":1680815133815,"results":"16","hashOfConfig":"13"},{"size":2123,"mtime":1680815133664,"results":"17","hashOfConfig":"13"},{"size":3033,"mtime":1680815133844,"results":"18","hashOfConfig":"13"},{"size":3037,"mtime":1680815133633,"results":"19","hashOfConfig":"13"},{"size":3707,"mtime":1680815133752,"results":"20","hashOfConfig":"13"},{"size":1158,"mtime":1680815133784,"results":"21","hashOfConfig":"13"},{"size":2018,"mtime":1680815133693,"results":"22","hashOfConfig":"13"},{"size":2053,"mtime":1680815133722,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3plvd3",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\index.js",[],[],"C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\App.js",["63"],[],"import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Banner from \"./components/Banner\";\nimport { useState, useEffect } from 'react';\nimport abi from \"./abi/music.json\";\nimport { ethers,utils } from \"ethers\";\nimport Headphones from \"./components/Headphones\";\nimport Earpods from \"./components/Earpods\";\nimport Speakers from \"./components/Speakers\";\nimport Orders from './components/Orders';\nimport About from \"./components/About\";\n\n\n\nfunction App() {\n  const [state, setState] = useState({\n    provider: null,\n    signer:null,\n    contract: null\n    });\n   \n   const [accountDetails, setAccountDetails] = useState({\n     accounts: null,\n     chainId: null,\n     balance: null,\n     contAddress: null\n   });\n\n   useEffect(() => {\n    const connectWallet = async () => {\n      const contractAddress = \"0x8765aA7C14AEc6A8b4eaD68e1ab1EC6c65B9166F\"; \n      const contractAbi = abi.abi;\n      try{\n        const {ethereum} = window;\n  \n        if(ethereum){\n          const accounts = await ethereum.request({\n            method:\"eth_requestAccounts\",\n        });\n        \n  \n        window.ethereum.on(\"chainChanged\", ()=>{\n          window.location.reload();\n        })\n  \n        window.ethereum.on(\"accountsChanged\",()=>{\n          window.location.reload();\n        })\n  \n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n       \n        \n        const contract = new ethers.Contract(\n          contractAddress,\n          contractAbi,\n          signer\n        );\n        setState({provider,signer,contract})\n        \n        const { chainId } = await provider.getNetwork();\n        var balance = await signer.getBalance()\n        balance = utils.formatUnits(balance)\n        // console.log(\"Accounts \" + accounts + \"chainID \" + chainId + \"Balance: \" + balance)\n        setAccountDetails({accounts, chainId, balance, contractAddress});\n        \n        }\n        else{\n          alert(\"Please install MetaMask\");\n        }\n      } catch (error){\n        console.log(error);\n      }\n  };\n  connectWallet();\n  },[]);\n  console.log(state);\n\n  return (\n    <div className=\"App\">\n      <Header state={state} details={accountDetails}/>\n    <Routes>\n      <Route path=\"/\" element={<Banner/>}/>\n      <Route exact path='/headphones' element={<Headphones state={state} />}/>\n      <Route exact path='/earphones' element={<Earpods state={state} />}/>\n      <Route exact path='/speakers' element={<Speakers state={state} />}/>\n      <Route exact path='/About' element={<About state={state} />}/>\n      <Route exact path='/orders' element={<Orders state={state} details={accountDetails}/>}/>\n    </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\components\\Headphones.js",["64","65","66"],[],"import { Container, Row, Col, Card, Button,Spinner,Alert } from 'react-bootstrap';\nimport Product1 from \"../Utils/Headphones.json\";\nimport { React, useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\n\n\nfunction Headphones({state}) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const { contract } = state; \n\n\n    const buy = async (id) => {\n        handleClose()\n        setIsLoading(true);\n         const index = id - 1; \n        const amount = {value:ethers.utils.parseEther(Product1[index].price)}\n        console.log(Product1[index].name);\n        console.log(index); \n       \n        const transaction = await contract.placeOrder(\n            Product1[index].name,\n            Product1[index].category,\n            Product1[index].imageURL,\n            Product1[index].description,\n            Product1[index].price,\n            amount\n            );\n            await transaction.wait();\n            console.log(\"Completed\")\n            setShowAlert(true);\n            setIsLoading(false);\n\n    }\n\n\n    return ( \n        <>\n        <Container style={{marginTop:\"50px\"}}>\n        <Alert variant=\"success\" show={showAlert} onClose={() => setShowAlert(false)} dismissible>Transaction is successful</Alert>\n            {Product1.map((product) => {\n                return (\n                    <Row key={product.id} style={{marginTop:\"20px\"}}>\n                    <Col style={{\n                        \"margin\":\"0\",\n                        top:\"50%\",\n                        display:\"flex\",\n                        justifyContent:\"center\",\n                        alignItems:\"center\"\n                    }}>\n                    <Card style={{ width: '35rem' }}>\n                     <Card.Img \n                     variant=\"top\" \n                     style={{objectFit:\"cover\"}}\n                     src={product.imageURL} />\n                 </Card>\n                    </Col>\n                    <Col style={{\n                        \"margin\":\"0\",\n                        top:\"50%\",\n                        display:\"flex\",\n                        justifyContent:\"center\",\n                        alignItems:\"center\"\n                    }}>\n                    \n                    <span> \n                    <h2 style={{marginBottom:\"15px\"}}>{product.name}</h2>\n                    {product.description}\n                    <br />\n                    {isLoading ? <Spinner animation=\"border\" variant=\"warning\" style={{marginTop:\"20px\"}}/> :\n                    <Button variant='light' size=\"lg\" style={{background:\"#d87d4a\", marginTop:\"20px\", color:\"#fff\"}} onClick={() => buy(product.id)}> {product.price} ETH</Button>\n                }\n                    </span>\n                    </Col>\n                </Row>\n                )\n            })}\n           \n        </Container>\n        </>\n     );\n}\n\nexport default Headphones;","C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\components\\About.js",[],[],"C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\components\\Speakers.js",["67","68","69"],[],"import { Container, Row, Col, Card, Button, Spinner,Alert } from 'react-bootstrap';\nimport Sounds from \"../Utils/Speakers.json\";\nimport { React, useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\n\nfunction Speakers({state}) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const { contract } = state; \n\n    const buy = async (id) => {\n        handleClose()\n        setIsLoading(true);\n         const index = id - 1; \n        const amount = {value:ethers.utils.parseEther(Sounds[index].price)}\n        console.log(Sounds[index].name);\n        console.log(index); \n       \n        const transaction = await contract.placeOrder(\n            Sounds[index].name,\n            Sounds[index].category,\n            Sounds[index].imageURL,\n            Sounds[index].description,\n            Sounds[index].price,\n            amount\n            );\n            await transaction.wait();\n            console.log(\"Completed\")\n            setShowAlert(true);\n            setIsLoading(false);\n\n    }\n\n    return ( \n        <>\n        <Container style={{marginTop:\"50px\"}}>\n        <Alert variant=\"success\" show={showAlert} onClose={() => setShowAlert(false)} dismissible>Transaction is successful</Alert>\n            {Sounds.map((product) => {\n                return (\n                    <Row key={product.id} style={{marginTop:\"20px\"}}>\n                    <Col style={{\n                        \"margin\":\"0\",\n                        top:\"50%\",\n                        display:\"flex\",\n                        justifyContent:\"center\",\n                        alignItems:\"center\"\n                    }}>\n                    <Card style={{ width: '35rem' }}>\n                     <Card.Img \n                     variant=\"top\" \n                     style={{objectFit:\"cover\"}}\n                     src={product.imageURL} />\n                 </Card>\n                    </Col>\n                    <Col style={{\n                        \"margin\":\"0\",\n                        top:\"50%\",\n                        display:\"flex\",\n                        justifyContent:\"center\",\n                        alignItems:\"center\"\n                    }}>\n                    \n                    <span> \n                    <h2 style={{marginBottom:\"15px\"}}>{product.name}</h2>\n                    {product.description}\n                    <br />\n                    {isLoading ? <Spinner animation=\"border\" variant=\"warning\" style={{marginTop:\"20px\"}}/> :\n                    <Button variant='light' size=\"lg\" style={{background:\"#d87d4a\", marginTop:\"20px\", color:\"#fff\"}} onClick={() => buy(product.id)}> {product.price} ETH</Button>\n                }\n                    </span>\n                    </Col>\n                </Row>\n                )\n            })}\n           \n        </Container>\n        </>\n     );\n}\n\nexport default Speakers;","C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\components\\Earpods.js",["70","71","72"],[],"import { Container, Row, Col, Card, Button, Spinner, Alert } from 'react-bootstrap';\nimport Pods from \"../Utils/Earphones.json\";\nimport { React, useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\n\nfunction Earpods({state}) {\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const { contract } = state; \n\n    const buy = async (id) => {\n        handleClose()\n        setIsLoading(true);\n         const index = id - 1; \n        const amount = {value:ethers.utils.parseEther(Pods[index].price)}\n        console.log(Pods[index].name);\n        console.log(index); \n       \n        const transaction = await contract.placeOrder(\n            Pods[index].name,\n            Pods[index].category,\n            Pods[index].imageURL,\n            Pods[index].description,\n            Pods[index].price,\n            amount\n            );\n            await transaction.wait();\n            console.log(\"Completed\")\n            setShowAlert(true);\n            setIsLoading(false);\n\n    }\n\n    return ( \n        <>\n        <Container style={{marginTop:\"50px\"}}>\n        <Alert variant=\"success\" show={showAlert} onClose={() => setShowAlert(false)} dismissible>Transaction is successful</Alert>\n            {Pods.map((product) => {\n                return (\n                    <Row key={product.id} style={{marginTop:\"20px\"}}>\n                    <Col style={{\n                        \"margin\":\"0\",\n                        top:\"50%\",\n                        display:\"flex\",\n                        justifyContent:\"center\",\n                        alignItems:\"center\"\n                    }}>\n                    <Card style={{ width: '35rem' }}>\n                     <Card.Img \n                     variant=\"top\" \n                     style={{objectFit:\"cover\"}}\n                     src={product.imageURL} />\n                 </Card>\n                    </Col>\n                    <Col style={{\n                        \"margin\":\"0\",\n                        top:\"50%\",\n                        display:\"flex\",\n                        justifyContent:\"center\",\n                        alignItems:\"center\"\n                    }}>\n                    \n                    <span> \n                    <h2 style={{marginBottom:\"15px\"}}>{product.name}</h2>\n                    {product.description}\n                    <br />\n                    {isLoading ? <Spinner animation=\"border\" variant=\"warning\" style={{marginTop:\"20px\"}}/> :\n                    <Button variant='light' size=\"lg\" style={{background:\"#d87d4a\", marginTop:\"20px\", color:\"#fff\"}} onClick={() => buy(product.id)}> {product.price} ETH</Button>\n                }\n                    </span>\n                    \n                    </Col>\n                </Row>\n                )\n            })}\n           \n        </Container>\n        </>\n     );\n}\n\nexport default Earpods;","C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\components\\Header.js",["73","74"],[],"import { Navbar, Container, Button, Nav, Modal, ListGroup } from 'react-bootstrap'\nimport { React, useEffect, useState, Row } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ethers } from 'ethers';\n\n\n\n\n\nfunction Header({state, details}) {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [currency, setCurrency] = useState();\n  const [loading, setLoading] = useState(true);\n  const [contractBalance, setContractBalance] = useState();\n\n  const { contract } = state;\n\n  const EtherscanURL = \"https://sepolia.etherscan.io/address/\" + details.contractAddress;\n\n  let navigate = useNavigate(); \n  const routeChange = () =>{ \n    let path = `/orders`; \n    navigate(path);\n    handleClose()\n  }\n\n  useEffect(() =>{\n    const contractBalance = async () =>{\n        const balance = await contract.getBalance();        \n        console.log(ethers.utils.formatEther(balance));\n        setContractBalance(ethers.utils.formatEther(balance));\n        \n    };\n    contract && contractBalance();\n},[contract]);\n\n\nuseEffect(() => {\n        fetch('https://api.coincap.io/v2/assets')\n        .then(response => response.json())\n        .then(response => {\n          console.log(response)\n          setCurrency(response);\n          setLoading(false);\n            \n        })\n        .catch(err => console.error(err));\n    },[])\n\n\n    return (\n        <>\n        <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand href=\"/\">Music Store Dapp</Navbar.Brand>\n          <Nav className=\"me-auto\" >\n            <Nav.Link href=\"/\" style={{color:\"#E9A178\"}}>Home</Nav.Link>\n            <Nav.Link href=\"/about\" style={{color:\"#E9A178\"}}>About</Nav.Link>\n          </Nav>\n          <Navbar.Collapse className=\"justify-content-end\">\n          <Navbar.Text>\n            Address: <a href=\"#\" onClick={handleShow} style={{color:\"#E9A178\"}}>{details.accounts}</a>\n          </Navbar.Text>\n        </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Account</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <ListGroup variant=\"flush\">\n        <ListGroup.Item>Wallet Address: <b>{details.accounts}</b></ListGroup.Item>\n        <ListGroup.Item>Contract Address: <br /><a href={EtherscanURL} style={{color:\"#000\"}}><b>{details.contractAddress}</b> </a></ListGroup.Item>\n        <ListGroup.Item>Wallet Balance: <br/> <b>{details.balance} ETH</b></ListGroup.Item>\n        <ListGroup.Item>Contract Balance: <br/> <b>{contractBalance} ETH</b></ListGroup.Item>\n        <ListGroup.Item>ChainID: <br/><b>{details.chainId}</b></ListGroup.Item>\n         </ListGroup>\n         <Modal.Title style={{marginTop:\"30px\", textAlign:\"center\"}}>Exchange Rate</Modal.Title>\n         { loading ?       \n       <h3>No Data</h3>\n       :\n         <ListGroup variant=\"flush\">\n        <ListGroup.Item>{currency.data[0].name} : <br/><b>{currency.data[0].priceUsd} USD</b></ListGroup.Item>\n        <ListGroup.Item>{currency.data[1].name} : <br/> <b>{currency.data[1].priceUsd} USD</b></ListGroup.Item>\n        <ListGroup.Item>{currency.data[2].name} : <br/><b>{currency.data[2].priceUsd} USD</b></ListGroup.Item>\n         </ListGroup>\n}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"light\" style={{backgroundColor:\"#E9A178\"}} onClick={routeChange}>\n            Orders\n          </Button>\n        </Modal.Footer>\n      </Modal>\n        \n        </>\n      );\n}\n\nexport default Header;","C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\components\\Banner.js",[],[],"C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\components\\Orders.js",["75","76","77","78"],[],"import { React, useState, useEffect } from 'react';\nimport { Container, Col, Row, Card, Table, Button, ListGroup } from 'react-bootstrap';\nimport Banner from './Banner';\nimport { ethers } from 'ethers';\n\n\nfunction Orders({state, details}) {\n    const [orders, setOrders] = useState([]);\n    const { contract } = state;\n    const address = details.accounts;\n    \n\n    useEffect(() =>{\n        const orderList = async () =>{\n            const orders = await contract.showOrders();\n            setOrders(orders);\n            \n        };\n        contract && orderList();\n    },[contract]);\n\n\n   \n\n\n\n\n// useEffect(() =>{\n// const withDraw = async () =>{\n//     const see = await contract.withdrawMoney(ethers.utils.parseEther(\"0.001\"));        \n//     console.log(see);\n    \n// };\n// contract && withDraw();\n// },[contract]);\n\n\n    return ( \n        <>\n        <Banner />\n        <Container>\n            <Row>\n                <Col></Col>\n                <Col md=\"auto\">\n                <h2>Order History</h2>\n                </Col>\n                <Col></Col>\n\n                 <Row style={{padding:\"20px\"}}>\n       <Card>\n      <Card.Header>Order History</Card.Header>\n      <Card.Body>\n      <Table striped bordered hover>\n      <thead>\n        <tr>\n          \n          <th> Product Name</th>\n          <th>Category</th>\n          <th>Order Placed At</th>\n          <th>Price</th>\n        </tr>\n      </thead>\n      {orders.map((order) => {\n        return(\n          String(order.from).toLowerCase() == address ? \n            <tbody key={order.timestamp}>\n            <tr>\n              <td>{order.name}</td>\n              <td>{order.category}</td>\n              <td>{new Date(order.timestamp * 1000).toLocaleString()}</td>\n              <td>{order.price} ETH</td>\n            </tr>\n          </tbody>  \n          :\n          <></>\n        );\n      })}\n     \n    </Table>\n      </Card.Body>\n    </Card>\n       </Row> \n                \n            </Row>\n        </Container>\n        </>\n     );\n}\n\nexport default Orders;","C:\\Users\\Rishabh\\Downloads\\Music Store\\Music Store\\frontend\\src\\components\\Landing.js",[],[],{"ruleId":"79","severity":1,"message":"80","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":23},{"ruleId":"79","severity":1,"message":"83","line":3,"column":27,"nodeType":"81","messageId":"82","endLine":3,"endColumn":36},{"ruleId":"79","severity":1,"message":"84","line":10,"column":12,"nodeType":"81","messageId":"82","endLine":10,"endColumn":16},{"ruleId":"79","severity":1,"message":"85","line":13,"column":11,"nodeType":"81","messageId":"82","endLine":13,"endColumn":21},{"ruleId":"79","severity":1,"message":"83","line":3,"column":27,"nodeType":"81","messageId":"82","endLine":3,"endColumn":36},{"ruleId":"79","severity":1,"message":"84","line":9,"column":12,"nodeType":"81","messageId":"82","endLine":9,"endColumn":16},{"ruleId":"79","severity":1,"message":"85","line":12,"column":11,"nodeType":"81","messageId":"82","endLine":12,"endColumn":21},{"ruleId":"79","severity":1,"message":"83","line":3,"column":27,"nodeType":"81","messageId":"82","endLine":3,"endColumn":36},{"ruleId":"79","severity":1,"message":"84","line":10,"column":12,"nodeType":"81","messageId":"82","endLine":10,"endColumn":16},{"ruleId":"79","severity":1,"message":"85","line":13,"column":11,"nodeType":"81","messageId":"82","endLine":13,"endColumn":21},{"ruleId":"79","severity":1,"message":"86","line":2,"column":38,"nodeType":"81","messageId":"82","endLine":2,"endColumn":41},{"ruleId":"87","severity":1,"message":"88","line":64,"column":22,"nodeType":"89","endLine":64,"endColumn":81},{"ruleId":"79","severity":1,"message":"90","line":2,"column":44,"nodeType":"81","messageId":"82","endLine":2,"endColumn":50},{"ruleId":"79","severity":1,"message":"91","line":2,"column":52,"nodeType":"81","messageId":"82","endLine":2,"endColumn":61},{"ruleId":"79","severity":1,"message":"92","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":16},{"ruleId":"93","severity":1,"message":"94","line":65,"column":44,"nodeType":"95","messageId":"96","endLine":65,"endColumn":46},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'show' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'Row' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.","'ListGroup' is defined but never used.","'ethers' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]